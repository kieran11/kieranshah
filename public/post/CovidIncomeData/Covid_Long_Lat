structure(list(`Neighbourhood Name` = c("Agincourt North", "Agincourt South-Malvern West", 
"Alderwood", "Annex", "Banbury-Don Mills", "Bathurst Manor", 
"Bay Street Corridor", "Bayview Village", "Bayview Woods-Steeles", 
"Bedford Park-Nortown", "Beechborough-Greenbrook", "Bendale", 
"Birchcliffe-Cliffside", "Black Creek", "Blake-Jones", "Briar Hill - Belgravia", 
"Bridle Path-Sunnybrook-York Mills", "Broadview North", "Brookhaven-Amesbury", 
"Cabbagetown-South St. James Town", "Caledonia-Fairbank", "Casa Loma", 
"Centennial Scarborough", "Church-Yonge Corridor", "Clairlea-Birchmount", 
"Clanton Park", "Cliffcrest", "Corso Italia-Davenport", "Danforth", 
"Danforth-East York", "Don Valley Village", "Dorset Park", "Dovercourt-Wallace Emerson-Junction", 
"Downsview-Roding-CFB", "Dufferin Grove", "East End-Danforth", 
"Edenbridge-Humber Valley", "Eglinton East", "Elms-Old Rexdale", 
"Englemount-Lawrence", "Eringate-Centennial-West Deane", "Etobicoke West Mall", 
"Flemingdon Park", "Forest Hill North", "Forest Hill South", 
"Glenfield-Jane Heights", "Greenwood-Coxwell", "Guildwood", "Henry Farm", 
"High Park-Swansea", "High Park North", "Highland Creek", "Hillcrest Village", 
"Humber Heights-Westmount", "Humber Summit", "Humbermede", "Humewood-Cedarvale", 
"Ionview", "Islington-City Centre West", "Junction Area", "Keelesdale-Eglinton West", 
"Kennedy Park", "Kensington-Chinatown", "Kingsview Village-The Westway", 
"Kingsway South", "L'Amoreaux", "Lambton Baby Point", "Lansing-Westgate", 
"Lawrence Park North", "Lawrence Park South", "Leaside-Bennington", 
"Little Portugal", "Long Branch", "Malvern", "Maple Leaf", "Markland Wood", 
"Milliken", "Mimico (includes Humber Bay Shores)", "Morningside", 
"Moss Park", "Mount Dennis", "Mount Olive-Silverstone-Jamestown", 
"Mount Pleasant East", "Mount Pleasant West", "New Toronto", 
"Newtonbrook East", "Newtonbrook West", "Niagara", "North Riverdale", 
"North St. James Town", "O'Connor-Parkview", "Oakridge", "Oakwood Village", 
"Old East York", "Palmerston-Little Italy", "Parkwoods-Donalda", 
"Pelmo Park-Humberlea", "Playter Estates-Danforth", "Pleasant View", 
"Princess-Rosethorn", "Regent Park", "Rexdale-Kipling", "Rockcliffe-Smythe", 
"Roncesvalles", "Rosedale-Moore Park", "Rouge", "Runnymede-Bloor West Village", 
"Rustic", "Scarborough Village", "South Parkdale", "South Riverdale", 
"St.Andrew-Windfields", "Steeles", "Stonegate-Queensway", "Tam O'Shanter-Sullivan", 
"Taylor-Massey", "The Beaches", "Thistletown-Beaumond Heights", 
"Thorncliffe Park", "Trinity-Bellwoods", "University", "Victoria Village", 
"West Hill", "West Humber-Clairville", "Westminster-Branson", 
"Weston", "Weston-Pellam Park", "Wexford/Maryvale", "Willowdale East", 
"Willowdale West", "Willowridge-Martingrove-Richview", "Woburn", 
"Woodbine-Lumsden", "Woodbine Corridor", "Wychwood", "Yonge-Eglinton", 
"Yonge-St.Clair", "York University Heights", "Yorkdale-Glen Park"
), n = c(83L, 56L, 44L, 84L, 39L, 131L, 56L, 35L, 120L, 88L, 
102L, 119L, 182L, 306L, 15L, 92L, 25L, 27L, 154L, 41L, 36L, 30L, 
35L, 97L, 213L, 71L, 61L, 56L, 14L, 30L, 68L, 158L, 88L, 460L, 
68L, 28L, 101L, 94L, 86L, 153L, 63L, 113L, 132L, 36L, 26L, 514L, 
27L, 147L, 98L, 66L, 54L, 45L, 72L, 194L, 145L, 166L, 27L, 43L, 
355L, 42L, 58L, 92L, 108L, 279L, 35L, 81L, 18L, 36L, 19L, 28L, 
24L, 39L, 29L, 225L, 148L, 29L, 56L, 143L, 197L, 220L, 214L, 
498L, 20L, 167L, 94L, 24L, 259L, 71L, 21L, 185L, 72L, 61L, 99L, 
21L, 31L, 73L, 88L, 56L, 31L, 22L, 31L, 137L, 150L, 37L, 30L, 
312L, 21L, 111L, 95L, 222L, 36L, 23L, 49L, 63L, 87L, 82L, 17L, 
107L, 143L, 40L, 31L, 76L, 125L, 499L, 187L, 327L, 41L, 87L, 
63L, 50L, 162L, 304L, 18L, 25L, 80L, 16L, 25L, 433L, 206L), lon = c(-79.2665016, 
-79.2422956, -122.2709024, -95.6175148, -79.3663593, -79.4568978, 
-74.072535, -79.3854777, -79.3825152, -79.4164645, -79.4747947, 
-79.248935, -79.244001, -81.7730527, -83.5661111, -79.4524023, 
-79.3718986, -79.3532778, -79.493829, -79.3733064, -79.4551573, 
-79.4094439, -79.1483269, -79.3878391, -79.2828424, -80.8884847, 
-79.226329, -79.4461276, -97.4689035, -79.311236, -79.353003, 
-79.281111, -79.4405951, -79.4923515, -79.4281914, -79.309632, 
-79.527974, -79.2462284, -79.5488603, -79.4351086, -79.5833168, 
-79.5687728, -79.3313903, -79.4263764, -89.9780807, -79.3043398, 
-79.3228164, -79.192777, -79.3465239, -79.4652576, -79.4668306, 
-80.7604628, -96.7891478, -79.527033, -79.5717846, -79.5394081, 
-79.428056, -79.2739, -79.5434841, -79.4721328, -79.470432, -87.6816793, 
-79.4004035, -79.5519144, -79.507194, -79.3157737, -79.4914798, 
-79.4225602, -79.38865, -79.4116873, -79.3710628, -79.430763, 
-73.9923596, -75.5138118, -122.3175976, -79.570763, -97.761655, 
-79.4774195, -90.6772305, -81.2077236, -79.4887807, -79.5892382, 
-86.1977355, -79.3944199, -79.505257, -79.4173154, -79.4173154, 
-78.9780898, -73.9036487, -79.3733064, -79.3102072, -96.1130438, 
-82.083689, -79.3377516, -79.4174767, -79.32644, -79.5332169, 
-79.359228, -89.5430145, -79.547744, -97.213473, -79.5705997, 
-79.4893716, -1.3035514, -79.377166, -94.2010157, -79.4838116, 
-95.9410326, -79.2170993, -79.442534, -73.9088276, -79.385534, 
-86.5042737, -79.4843454, -79.2981138, -79.285308, -79.296693, 
-79.5712672, -79.3435967, -79.4170732, -97.4457137, -95.189015, 
-95.2540797, -79.6258435, -79.451092, -79.5162643, -79.4577314, 
-79.3007543, -79.4197497, -79.4197497, -79.5685853, -71.1522765, 
-79.309937, -79.309937, -1.5141804, -79.398642, -79.3941166, 
-79.4774456, -79.453975), lat = c(43.8080532, 43.7899638, 47.8307483, 
37.0351783, 43.7491152, 43.7628188, 40.622464, 43.7690903, 43.7948077, 
43.7245589, 43.6943212, 43.765434, 43.712217, 30.0786952, 35.7977778, 
43.7037136, 43.7359137, 43.6885292, 43.6969489, 43.6708666, 43.6899015, 
43.6780371, 43.7816836, 43.6728576, 43.7162053, 35.1964736, 43.724917, 
43.6773705, 35.6668515, 43.6860447, 43.787359, 43.7658308, 43.6684011, 
43.7298069, 43.6558326, 43.6781823, 43.667113, 43.7371449, 43.7237117, 
43.7180526, 43.6599082, 43.6451146, 43.7183725, 43.7052493, 35.0058147, 
43.7068222, 43.6720554, 43.752743, 43.7695834, 43.6535556, 43.6572262, 
35.3780263, 32.9628097, 43.6963578, 43.7601003, 43.7389945, 43.694479, 
43.730824, 43.6309156, 43.6655088, 43.6854647, 41.6871449, 43.6539432, 
43.7005039, 43.652674, 43.7967612, 43.6581547, 43.7589653, 43.7237857, 
43.7121368, 43.6971458, 43.6475952, 40.3042778, 40.0362184, 47.6958402, 
43.6335688, 30.503385, 43.6259939, 35.7929417, 28.4013818, 43.6854767, 
43.7411486, 39.6321676, 43.7048511, 43.6007776, 43.7870678, 43.7870678, 
43.0732196, 40.9090464, 43.6708666, 43.7060765, 36.8970141, 33.4710759, 
43.692042, 43.6599648, 43.7527765, 43.721319, 43.6790323, 43.0878257, 
43.6700497, 37.7092464, 43.7198568, 43.6769062, 43.0169504, 43.685688, 
36.3348945, 43.6592804, 36.0866999, 43.7387924, 43.643832, 40.8996183, 
43.7548135, 42.0743515, 43.6305047, 43.7810585, 43.737705, 43.6673479, 
43.7429033, 43.7074843, 43.6500682, 35.2058936, 29.6967924, 38.962188, 
43.7356492, 43.7855803, 43.7001672, 43.6716304, 43.7612714, 43.7711708, 
43.7711708, 43.6866454, 42.4792618, 43.692177, 43.692177, 51.8590652, 
43.706431, 43.6880978, 43.7664492, 43.708236)), class = c("spec_tbl_df", 
"tbl_df", "tbl", "data.frame"), row.names = c(NA, -139L), spec = structure(list(
    cols = list(`_id` = structure(list(), class = c("collector_double", 
    "collector")), Assigned_ID = structure(list(), class = c("collector_double", 
    "collector")), `Outbreak Associated` = structure(list(), class = c("collector_character", 
    "collector")), `Age Group` = structure(list(), class = c("collector_character", 
    "collector")), `Neighbourhood Name` = structure(list(), class = c("collector_character", 
    "collector")), FSA = structure(list(), class = c("collector_character", 
    "collector")), `Source of Infection` = structure(list(), class = c("collector_character", 
    "collector")), Classification = structure(list(), class = c("collector_character", 
    "collector")), `Episode Date` = structure(list(format = ""), class = c("collector_date", 
    "collector")), `Reported Date` = structure(list(format = ""), class = c("collector_date", 
    "collector")), `Client Gender` = structure(list(), class = c("collector_character", 
    "collector")), Outcome = structure(list(), class = c("collector_character", 
    "collector")), `Currently Hospitalized` = structure(list(), class = c("collector_character", 
    "collector")), `Currently in ICU` = structure(list(), class = c("collector_character", 
    "collector")), `Currently Intubated` = structure(list(), class = c("collector_character", 
    "collector")), `Ever Hospitalized` = structure(list(), class = c("collector_character", 
    "collector")), `Ever in ICU` = structure(list(), class = c("collector_character", 
    "collector")), `Ever Intubated` = structure(list(), class = c("collector_character", 
    "collector"))), default = structure(list(), class = c("collector_guess", 
    "collector")), skip = 1), class = "col_spec"))
